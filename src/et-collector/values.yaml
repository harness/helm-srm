# Default values for et-collector.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1
maxSurge: 100%
maxUnavailable: 0

image:
  registry: docker.io
  repository: harness/et-collector-signed
  pullPolicy: IfNotPresent
  tag: "5.0.7"
  digest: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

waitForInitContainer:
  image:
    registry: docker.io
    repository: harness/helm-init-container
    pullPolicy: IfNotPresent
    tag: "latest"
    digest: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "harness-default"

livenessProbe:
  enabled: true
  initialDelaySeconds: 60
  periodSeconds: 10
  failureThreshold: 3
  successThreshold: 1
  timeoutSeconds: 1

readinessProbe:
  enabled: true
  initialDelaySeconds: 60
  periodSeconds: 5
  failureThreshold: 3
  successThreshold: 1
  timeoutSeconds: 1

podAnnotations: {}

podSecurityContext: {}

securityContext:
  runAsUser: 65534
  runAsNonRoot: true


service:
  type: ClusterIP
  port: 6070

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
      - path: /
        backend:
          serviceName: chart-example.local
          servicePort: 6070
  tls: []


resources:
  limits:
    cpu: 1
    memory: 2Gi
  requests:
    cpu: 100m
    memory: 2Gi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPU: ""
  targetMemory: ""

nodeSelector: {}

tolerations: []

affinity: {}

et:
  logLevel: INFO
  backendURL: http://et-service:9191
  storageTestURL: http://et-service:9191/service/png
  redis:
    enabled: false
    host:
    port: 6379
    useSentinel: true

  java:
    heapSize: "1600m"
