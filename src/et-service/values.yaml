# Default values for et-service.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
global:
  loadbalancerURL: "http://test/abc"

replicaCount: 1
maxSurge: 100%
maxUnavailable: 0

image:
  registry: docker.io
  repository: harness/error-tracking-signed
  pullPolicy: IfNotPresent
  tag: "5.3.0"
  digest: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

## -- initContainer for Harness application waits
waitForInitContainer:
  image:
    registry: docker.io
    repository: harness/helm-init-container
    pullPolicy: IfNotPresent
    tag: "latest"
    digest: ""

# Postgres secret value and key
postgresPassword:
  name: postgres
  key: postgres-password

et:
  logLevel: INFO

  dataRetention:
    verbose: false
    days: 90
    schedule: "0 0 2 * * *"
    batchSize: 1000

  java:
    enableHeapDump: false
    heapSize: "6400m"

  redis:
    enabled: true
    host:
    port: 6379
    trimCronExpression: "@hourly"
    streamLength: 1000
    useSentinel: true
    streamLengths:
      AddHit: 2500
      ServiceStats: 1000
      AgentStats: 2500
      DeferredAgentStats: 1000
      Decompile: 1000
      SQL_Insertion: 2500
      SQL_LocInvInsertion: 2500
      SQL_MetricInsertion: 2500

  hikari:
    maximumPoolSize: 10
    connectionTimeout: 60000

  grpc:
    gitsyncTarget: ng-manager:13002
    gitsyncAuthority: ng-manager:13002
    gitsyncSSL: false

  harness:
    cvngURL: http://cv-nextgen:6060
    ngManagerURL: http://ng-manager:7090

livenessProbe:
  enabled: true
  periodSeconds: 10
  initialDelaySeconds: 60
  failureThreshold: 3
  successThreshold: 1
  timeoutSeconds: 1

startupProbe:
  enabled: true
  initialDelaySeconds: 80
  periodSeconds: 10
  failureThreshold: 10
  successThreshold: 1
  timeoutSeconds: 1

readinessProbe:
  enabled: true
  initialDelaySeconds: 60
  periodSeconds: 5
  failureThreshold: 3
  successThreshold: 1
  timeoutSeconds: 1

# serviceAccount:
#   # Specifies whether a service account should be created
#   create: true
#   # Annotations to add to the service account
#   annotations: {}
#   # The name of the service account to use.
#   # If not set and create is true, a name is generated using the fullname template
#   name: ""

# Temp Hack to solve the following, will be fix soon .
#   User "system:serviceaccount:harness-1:harness-et-service" cannot list resource "pods" in API group "" in the namespace "harness-1"
serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "harness-default"


podAnnotations: {}

podSecurityContext: {}

securityContext:
  runAsUser: 65534
  runAsNonRoot: true

service:
  type: ClusterIP
  port: 9191
  collectorPort: 6071

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: et-service
      paths:
      - path: /
        backend:
          serviceName: et-service
          servicePort: 9191
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  requests:
    cpu: 100m
    memory: 8Gi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPU: ""
  targetMemory: ""

nodeSelector: {}

tolerations: []

affinity: {}

# extraVolumes:
#   - name: volume-test
#     configMap:
#       name: test-config
#       # readOnly: true
extraVolumes: []

# extraVolumeMounts:
#   - name: volume-test
#     mountPath: /opt/harness/config
extraVolumeMounts: []

lifecycleHooks: {}
# lifecycleHooks:
#   postStart:
#     exec:
#       command:
#   preStop:
#     exec:
#       command: